const { Anthropic } = require('@anthropic-ai/sdk');
const logger = require('../../utils/logger');

class LicitAIService {
  constructor() {
    this.anthropic = new Anthropic({
      apiKey: process.env.ANTHROPIC_API_KEY
    });
    this.model = process.env.ANTHROPIC_MODEL || 'claude-3-opus-20240229';
    this.maxTokens = parseInt(process.env.ANTHROPIC_MAX_TOKENS) || 4000;

    // Prompts especializados
    this.prompts = {
      analiseCompleta: this.getAnaliseCompletaPrompt(),
      consultaGeral: this.getConsultaGeralPrompt(),
      analiseDocumento: this.getAnaliseDocumentoPrompt(),
      estrategiaParticipacao: this.getEstrategiaParticipacaoPrompt(),
      riscoCompliance: this.getRiscoCompliancePrompt(),
      previsaoMercado: this.getPrevisaoMercadoPrompt()
    };
  }

  /**
   * An√°lise completa e especializada de edital
   */
  async analisarEditalCompleto(editalData, empresaData, historicoData = null) {
    try {
      logger.info('ü§ñ LicitAI: Iniciando an√°lise completa do edital');

      const prompt = this.prompts.analiseCompleta
        .replace('{EDITAL_DATA}', JSON.stringify(editalData, null, 2))
        .replace('{EMPRESA_DATA}', JSON.stringify(empresaData, null, 2))
        .replace('{HISTORICO_DATA}', JSON.stringify(historicoData, null, 2));

      const response = await this.anthropic.messages.create({
        model: this.model,
        max_tokens: this.maxTokens,
        messages: [{ role: 'user', content: prompt }]
      });

      const analise = this.parseAnaliseCompleta(response.content[0].text);

      logger.info('‚úÖ LicitAI: An√°lise completa conclu√≠da');
      return analise;

    } catch (error) {
      logger.error('‚ùå LicitAI: Erro na an√°lise completa:', error);
      throw new Error('Erro na an√°lise do LicitAI: ' + error.message);
    }
  }

  /**
   * Consulta geral sobre licita√ß√µes - Chat inteligente
   */
  async consultaGeral(pergunta, contexto = null) {
    try {
      logger.info('üí¨ LicitAI: Processando consulta geral');

      const prompt = this.prompts.consultaGeral
        .replace('{PERGUNTA}', pergunta)
        .replace('{CONTEXTO}', contexto ? JSON.stringify(contexto, null, 2) : 'Nenhum contexto espec√≠fico');

      const response = await this.anthropic.messages.create({
        model: this.model,
        max_tokens: this.maxTokens,
        messages: [{ role: 'user', content: prompt }]
      });

      const resposta = this.parseConsultaGeral(response.content[0].text);

      logger.info('‚úÖ LicitAI: Consulta geral processada');
      return resposta;

    } catch (error) {
      logger.error('‚ùå LicitAI: Erro na consulta geral:', error);
      throw new Error('Erro na consulta do LicitAI: ' + error.message);
    }
  }

  /**
   * An√°lise espec√≠fica de documento PDF/texto
   */
  async analisarDocumento(textoDocumento, tipoAnalise = 'geral') {
    try {
      logger.info('üìÑ LicitAI: Analisando documento');

      const prompt = this.prompts.analiseDocumento
        .replace('{TEXTO_DOCUMENTO}', textoDocumento)
        .replace('{TIPO_ANALISE}', tipoAnalise);

      const response = await this.anthropic.messages.create({
        model: this.model,
        max_tokens: this.maxTokens,
        messages: [{ role: 'user', content: prompt }]
      });

      const analise = this.parseAnaliseDocumento(response.content[0].text);

      logger.info('‚úÖ LicitAI: An√°lise de documento conclu√≠da');
      return analise;

    } catch (error) {
      logger.error('‚ùå LicitAI: Erro na an√°lise de documento:', error);
      throw new Error('Erro na an√°lise de documento: ' + error.message);
    }
  }

  /**
   * Estrat√©gia espec√≠fica de participa√ß√£o
   */
  async gerarEstrategiaParticipacao(editalData, empresaData, concorrencia = null) {
    try {
      logger.info('üéØ LicitAI: Gerando estrat√©gia de participa√ß√£o');

      const prompt = this.prompts.estrategiaParticipacao
        .replace('{EDITAL_DATA}', JSON.stringify(editalData, null, 2))
        .replace('{EMPRESA_DATA}', JSON.stringify(empresaData, null, 2))
        .replace('{CONCORRENCIA_DATA}', JSON.stringify(concorrencia, null, 2));

      const response = await this.anthropic.messages.create({
        model: this.model,
        max_tokens: this.maxTokens,
        messages: [{ role: 'user', content: prompt }]
      });

      const estrategia = this.parseEstrategiaParticipacao(response.content[0].text);

      logger.info('‚úÖ LicitAI: Estrat√©gia de participa√ß√£o gerada');
      return estrategia;

    } catch (error) {
      logger.error('‚ùå LicitAI: Erro na gera√ß√£o de estrat√©gia:', error);
      throw new Error('Erro na gera√ß√£o de estrat√©gia: ' + error.message);
    }
  }

  /**
   * An√°lise de riscos e compliance
   */
  async analisarRiscoCompliance(editalData, empresaData) {
    try {
      logger.info('‚ö†Ô∏è LicitAI: Analisando riscos e compliance');

      const prompt = this.prompts.riscoCompliance
        .replace('{EDITAL_DATA}', JSON.stringify(editalData, null, 2))
        .replace('{EMPRESA_DATA}', JSON.stringify(empresaData, null, 2));

      const response = await this.anthropic.messages.create({
        model: this.model,
        max_tokens: this.maxTokens,
        messages: [{ role: 'user', content: prompt }]
      });

      const analise = this.parseRiscoCompliance(response.content[0].text);

      logger.info('‚úÖ LicitAI: An√°lise de riscos conclu√≠da');
      return analise;

    } catch (error) {
      logger.error('‚ùå LicitAI: Erro na an√°lise de riscos:', error);
      throw new Error('Erro na an√°lise de riscos: ' + error.message);
    }
  }

  /**
   * Previs√£o de mercado e tend√™ncias
   */
  async preverTendenciasMercado(segmento, periodo = '6 meses') {
    try {
      logger.info('üìà LicitAI: Prevendo tend√™ncias de mercado');

      const prompt = this.prompts.previsaoMercado
        .replace('{SEGMENTO}', segmento)
        .replace('{PERIODO}', periodo);

      const response = await this.anthropic.messages.create({
        model: this.model,
        max_tokens: this.maxTokens,
        messages: [{ role: 'user', content: prompt }]
      });

      const previsao = this.parsePrevisaoMercado(response.content[0].text);

      logger.info('‚úÖ LicitAI: Previs√£o de tend√™ncias conclu√≠da');
      return previsao;

    } catch (error) {
      logger.error('‚ùå LicitAI: Erro na previs√£o de mercado:', error);
      throw new Error('Erro na previs√£o de mercado: ' + error.message);
    }
  }

  // ==================== PROMPTS ESPECIALIZADOS ====================

  getAnaliseCompletaPrompt() {
    return `
Voc√™ √© o LicitAI, um especialista em licita√ß√µes p√∫blicas com mais de 20 anos de experi√™ncia.
Analise completamente este edital considerando todos os aspectos t√©cnicos, financeiros, jur√≠dicos e estrat√©gicos.

DADOS DO EDITAL:
{EDITAL_DATA}

DADOS DA EMPRESA:
{EMPRESA_DATA}

HIST√ìRICO DE PARTICIPA√á√ïES:
{HISTORICO_DATA}

Forne√ßa uma an√°lise EXTREMAMENTE detalhada e estrat√©gica em formato JSON:

{
  "resumo_executivo": "An√°lise concisa em 3-4 frases sobre a viabilidade",
  "score_viabilidade": 85,
  "recomendacao_principal": "participar|analisar_mais|nao_participar",

  "analise_detalhada": {
    "adequacao_objeto": "An√°lise da adequa√ß√£o do objeto √† empresa",
    "analise_financeira": "Viabilidade econ√¥mica detalhada",
    "analise_tecnica": "Complexidade e requisitos t√©cnicos",
    "analise_juridica": "Aspectos legais e documenta√ß√£o",
    "analise_prazo": "Viabilidade dos prazos propostos",
    "analise_concorrencia": "Estimativa de competitividade"
  },

  "pontos_criticos": [
    {"ponto": "descri√ß√£o", "tipo": "risco|oportunidade", "impacto": "alto|medio|baixo"}
  ],

  "estrategia_recomendada": {
    "abordagem": "Estrat√©gia principal recomendada",
    "diferenciais": ["diferencial 1", "diferencial 2"],
    "precificacao": "Estrat√©gia de pre√ßos",
    "parcerias": "Necessidade de parcerias",
    "cronograma": "Cronograma de prepara√ß√£o"
  },

  "riscos_identificados": [
    {"risco": "descri√ß√£o", "probabilidade": "alta|media|baixa", "mitigacao": "como mitigar"}
  ],

  "documentacao_necessaria": [
    {"documento": "nome", "complexidade": "alta|media|baixa", "prazo_obter": "dias"}
  ],

  "previsao_resultado": {
    "probabilidade_sucesso": 75,
    "fatores_sucesso": ["fator 1", "fator 2"],
    "fatores_risco": ["risco 1", "risco 2"]
  },

  "insights_especiais": [
    "Insight estrat√©gico espec√≠fico baseado na experi√™ncia"
  ]
}

IMPORTANTE: Base sua an√°lise em conhecimento real sobre licita√ß√µes p√∫blicas brasileiras.
`;
  }

  getConsultaGeralPrompt() {
    return `
Voc√™ √© o LicitAI, um consultor especialista em licita√ß√µes p√∫blicas brasileiras com vasta experi√™ncia pr√°tica.
Responda √† seguinte pergunta de forma did√°tica, pr√°tica e acion√°vel.

PERGUNTA DO USU√ÅRIO:
{PERGUNTA}

CONTEXTO ADICIONAL:
{CONTEXTO}

Forne√ßa uma resposta em formato JSON:

{
  "resposta_principal": "Resposta clara e direta √† pergunta",
  "explicacao_detalhada": "Explica√ß√£o t√©cnica e detalhada",
  "dicas_praticas": [
    "Dica pr√°tica 1",
    "Dica pr√°tica 2"
  ],
  "referencias_legais": [
    {"lei": "Nome da lei", "artigo": "artigo espec√≠fico", "relevancia": "como se aplica"}
  ],
  "exemplos_praticos": [
    "Exemplo real e aplic√°vel"
  ],
  "proximos_passos": [
    "A√ß√£o recomendada 1",
    "A√ß√£o recomendada 2"
  ],
  "alertas_importantes": [
    "Alerta ou cuidado especial"
  ]
}

Seja preciso, did√°tico e forne√ßa valor pr√°tico real.
`;
  }

  getAnaliseDocumentoPrompt() {
    return `
Voc√™ √© o LicitAI, especialista em an√°lise de documentos de licita√ß√£o.
Analise este documento e extraia informa√ß√µes estrat√©gicas.

DOCUMENTO:
{TEXTO_DOCUMENTO}

TIPO DE AN√ÅLISE: {TIPO_ANALISE}

Forne√ßa an√°lise em formato JSON:

{
  "tipo_documento": "edital|contrato|termo_referencia|outro",
  "resumo_conteudo": "Resumo do conte√∫do principal",

  "informacoes_extraidas": {
    "valor_estimado": 0,
    "prazo_execucao": "prazo",
    "modalidade": "tipo de licita√ß√£o",
    "criterio_julgamento": "crit√©rio",
    "requisitos_principais": ["requisito 1", "requisito 2"]
  },

  "pontos_atencao": [
    {"ponto": "descri√ß√£o", "tipo": "risco|oportunidade|neutro"}
  ],

  "clausulas_criticas": [
    {"clausula": "texto da cl√°usula", "impacto": "explica√ß√£o do impacto"}
  ],

  "recomendacoes": [
    "Recomenda√ß√£o estrat√©gica baseada no documento"
  ],

  "score_clareza": 85,
  "complexidade_juridica": "alta|media|baixa"
}

Seja meticuloso na an√°lise e identifique detalhes importantes.
`;
  }

  getEstrategiaParticipacaoPrompt() {
    return `
Voc√™ √© o LicitAI, consultor estrat√©gico em licita√ß√µes.
Desenvolva uma estrat√©gia espec√≠fica de participa√ß√£o para este edital.

DADOS DO EDITAL:
{EDITAL_DATA}

DADOS DA EMPRESA:
{EMPRESA_DATA}

AN√ÅLISE DA CONCORR√äNCIA:
{CONCORRENCIA_DATA}

Desenvolva estrat√©gia em formato JSON:

{
  "estrategia_principal": "Nome da estrat√©gia",
  "abordagem_geral": "Descri√ß√£o da abordagem",

  "vantagens_competitivas": [
    {"vantagem": "descri√ß√£o", "como_explorar": "estrat√©gia"}
  ],

  "estrategia_tecnica": {
    "diferenciacao": "Como se diferenciar tecnicamente",
    "propostas_valor": ["proposta 1", "proposta 2"],
    "inovacoes": ["inova√ß√£o sugerida"]
  },

  "estrategia_comercial": {
    "posicionamento_preco": "premium|competitivo|economico",
    "margem_recomendada": 15,
    "fatores_precificacao": ["fator 1", "fator 2"]
  },

  "cronograma_preparacao": [
    {"atividade": "nome", "prazo_dias": 5, "responsavel": "area"}
  ],

  "recursos_necessarios": {
    "equipe": ["perfil 1", "perfil 2"],
    "investimento": 0,
    "parcerias": ["tipo de parceria"]
  },

  "plano_mitigacao": [
    {"risco": "descri√ß√£o", "acao": "a√ß√£o mitigadora"}
  ],

  "kpis_sucesso": [
    {"indicador": "nome", "meta": "valor esperado"}
  ]
}

Seja estrat√©gico e forne√ßa um plano execut√°vel.
`;
  }

  getRiscoCompliancePrompt() {
    return `
Voc√™ √© o LicitAI, especialista em compliance e gest√£o de riscos em licita√ß√µes.
Analise os riscos e aspectos de compliance deste edital.

DADOS DO EDITAL:
{EDITAL_DATA}

DADOS DA EMPRESA:
{EMPRESA_DATA}

Forne√ßa an√°lise completa em formato JSON:

{
  "score_risco_geral": 65,
  "nivel_compliance": "alto|medio|baixo",

  "riscos_identificados": [
    {
      "categoria": "financeiro|tecnico|juridico|reputacional",
      "risco": "descri√ß√£o do risco",
      "probabilidade": "alta|media|baixa",
      "impacto": "alto|medio|baixo",
      "mitigacao": "estrat√©gia de mitiga√ß√£o"
    }
  ],

  "requisitos_compliance": [
    {
      "requisito": "descri√ß√£o",
      "status_empresa": "atende|nao_atende|parcial",
      "acao_necessaria": "o que fazer para atender"
    }
  ],

  "documentacao_compliance": [
    {
      "documento": "nome do documento",
      "obrigatorio": true,
      "prazo_validade": "6 meses",
      "status": "ok|vencido|inexistente"
    }
  ],

  "alertas_criticos": [
    "Alerta importante sobre compliance"
  ],

  "recomendacoes_acao": [
    {
      "prioridade": "alta|media|baixa",
      "acao": "descri√ß√£o da a√ß√£o",
      "prazo": "prazo para execu√ß√£o"
    }
  ],

  "impacto_nao_compliance": [
    "Consequ√™ncia de n√£o atender requisitos"
  ]
}

Seja rigoroso na an√°lise de compliance e riscos.
`;
  }

  getPrevisaoMercadoPrompt() {
    return `
Voc√™ √© o LicitAI, analista de mercado especializado em licita√ß√µes p√∫blicas brasileiras.
Forne√ßa previs√µes e tend√™ncias para o segmento solicitado.

SEGMENTO: {SEGMENTO}
PER√çODO DE AN√ÅLISE: {PERIODO}

Forne√ßa previs√£o em formato JSON:

{
  "tendencias_macro": [
    {
      "tendencia": "descri√ß√£o da tend√™ncia",
      "impacto": "alto|medio|baixo",
      "oportunidades": ["oportunidade 1", "oportunidade 2"]
    }
  ],

  "previsao_volume": {
    "crescimento_esperado": "15%",
    "setores_aquecidos": ["setor 1", "setor 2"],
    "setores_retraidos": ["setor 1"]
  },

  "mudancas_regulatorias": [
    {
      "mudanca": "descri√ß√£o",
      "impacto_empresas": "como afeta as empresas",
      "prazo_implementacao": "quando"
    }
  ],

  "oportunidades_emergentes": [
    "Oportunidade estrat√©gica identificada"
  ],

  "recomendacoes_estrategicas": [
    "Recomenda√ß√£o para posicionamento"
  ],

  "indicadores_monitorar": [
    {
      "indicador": "nome",
      "relevancia": "por que monitorar",
      "fonte": "onde acompanhar"
    }
  ]
}

Base suas previs√µes em conhecimento real do mercado brasileiro.
`;
  }

  // ==================== PARSERS ====================

  parseAnaliseCompleta(response) {
    try {
      const jsonMatch = response.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        return JSON.parse(jsonMatch[0]);
      }
      throw new Error('Formato de resposta inv√°lido');
    } catch (error) {
      return this.getDefaultAnaliseCompleta();
    }
  }

  parseConsultaGeral(response) {
    try {
      const jsonMatch = response.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        return JSON.parse(jsonMatch[0]);
      }
      throw new Error('Formato de resposta inv√°lido');
    } catch (error) {
      return this.getDefaultConsultaGeral();
    }
  }

  parseAnaliseDocumento(response) {
    try {
      const jsonMatch = response.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        return JSON.parse(jsonMatch[0]);
      }
      throw new Error('Formato de resposta inv√°lido');
    } catch (error) {
      return this.getDefaultAnaliseDocumento();
    }
  }

  parseEstrategiaParticipacao(response) {
    try {
      const jsonMatch = response.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        return JSON.parse(jsonMatch[0]);
      }
      throw new Error('Formato de resposta inv√°lido');
    } catch (error) {
      return this.getDefaultEstrategiaParticipacao();
    }
  }

  parseRiscoCompliance(response) {
    try {
      const jsonMatch = response.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        return JSON.parse(jsonMatch[0]);
      }
      throw new Error('Formato de resposta inv√°lido');
    } catch (error) {
      return this.getDefaultRiscoCompliance();
    }
  }

  parsePrevisaoMercado(response) {
    try {
      const jsonMatch = response.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        return JSON.parse(jsonMatch[0]);
      }
      throw new Error('Formato de resposta inv√°lido');
    } catch (error) {
      return this.getDefaultPrevisaoMercado();
    }
  }

  // ==================== FALLBACKS ====================

  getDefaultAnaliseCompleta() {
    return {
      resumo_executivo: "An√°lise temporariamente indispon√≠vel. Tente novamente em alguns instantes.",
      score_viabilidade: 50,
      recomendacao_principal: "analisar_mais",
      analise_detalhada: {},
      pontos_criticos: [],
      estrategia_recomendada: {},
      riscos_identificados: [],
      documentacao_necessaria: [],
      previsao_resultado: {},
      insights_especiais: []
    };
  }

  getDefaultConsultaGeral() {
    return {
      resposta_principal: "Servi√ßo temporariamente indispon√≠vel. Tente novamente em alguns instantes.",
      explicacao_detalhada: "",
      dicas_praticas: [],
      referencias_legais: [],
      exemplos_praticos: [],
      proximos_passos: [],
      alertas_importantes: []
    };
  }

  getDefaultAnaliseDocumento() {
    return {
      tipo_documento: "outro",
      resumo_conteudo: "An√°lise temporariamente indispon√≠vel.",
      informacoes_extraidas: {},
      pontos_atencao: [],
      clausulas_criticas: [],
      recomendacoes: [],
      score_clareza: 50,
      complexidade_juridica: "media"
    };
  }

  getDefaultEstrategiaParticipacao() {
    return {
      estrategia_principal: "An√°lise manual recomendada",
      abordagem_geral: "Servi√ßo temporariamente indispon√≠vel.",
      vantagens_competitivas: [],
      estrategia_tecnica: {},
      estrategia_comercial: {},
      cronograma_preparacao: [],
      recursos_necessarios: {},
      plano_mitigacao: [],
      kpis_sucesso: []
    };
  }

  getDefaultRiscoCompliance() {
    return {
      score_risco_geral: 50,
      nivel_compliance: "medio",
      riscos_identificados: [],
      requisitos_compliance: [],
      documentacao_compliance: [],
      alertas_criticos: [],
      recomendacoes_acao: [],
      impacto_nao_compliance: []
    };
  }

  getDefaultPrevisaoMercado() {
    return {
      tendencias_macro: [],
      previsao_volume: {},
      mudancas_regulatorias: [],
      oportunidades_emergentes: [],
      recomendacoes_estrategicas: [],
      indicadores_monitorar: []
    };
  }
}

module.exports = LicitAIService;