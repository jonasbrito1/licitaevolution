version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: licitaevolution_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: licitaevolution
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init-mysql.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/mysql.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - erp_network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=256M --max-connections=100
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: erp_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - erp_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: erp_backend
    ports:
      - "3001:3001"
    volumes:
      - ./:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=licitaevolution
      - DB_USER=admin
      - DB_PASSWORD=admin123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=sua_chave_secreta_super_segura_aqui_32_caracteres
      - PORT=3001
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-demo-key}
      - ANTHROPIC_MODEL=claude-3-opus-20240229
      - SMTP_HOST=${SMTP_HOST:-localhost}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-user}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-password}
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - erp_network
    restart: unless-stopped
    command: npm run dev

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: erp_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_WS_URL=ws://localhost:3001
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=false
    depends_on:
      - backend
    networks:
      - erp_network
    restart: unless-stopped
    stdin_open: true
    tty: true
    command: npm start

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: licitaevolution_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: admin
      PMA_PASSWORD: admin123
      MYSQL_ROOT_PASSWORD: root123
      UPLOAD_LIMIT: 100M
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - erp_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: erp_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - erp_network
    restart: unless-stopped

networks:
  erp_network:
    driver: bridge
    name: licitaevolution_network
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local